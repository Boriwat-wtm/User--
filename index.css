/* index.css */
body {
  margin: 0;
  font-family: sans-serif;
}

import React, { useState } from "react";
import { useLocation, useHistory } from "react-router-dom";
import "./Upload.css";
function Upload() {  const location = useLocation();  const history = useHistory();  const queryParams = new URLSearchParams(location.search);  const type = queryParams.get("type");  const time = parseInt(queryParams.get("time")); // เวลาที่เลือกในนาที  const price = queryParams.get("price");  const [text, setText] = useState("");  const [image, setImage] = useState(null);  const [showModal, setShowModal] = useState(false);  const [showPreviewModal, setShowPreviewModal] = useState(false);  const [alertMessage, setAlertMessage] = useState("");  const handleTextChange = (e) => setText(e.target.value);  const handleImageChange = (e) => setImage(e.target.files[0]);  const handleUpload = () => {    if (type === "image" && !image) {      setAlertMessage("โปรดใส่ไฟล์ก่อน");      return;    }    setShowPreviewModal(true);  };  const handleAccept = () => {    alert("ข้อมูลของคุณได้รับการบันทึกแล้ว!");    let order = localStorage.getItem('order');    order = order === '#' || order === null ? 1 : parseInt(order) + 1;    localStorage.setItem('order', order);    let endTime = localStorage.getItem('endTime');    const currentTime = new Date();    const startTime = endTime ? new Date(endTime) : currentTime;    const newEndTime = new Date(startTime.getTime() + time * 60000);    localStorage.setItem('endTime', newEndTime);    localStorage.setItem('time', time); // เก็บเวลาที่เลือกใน localStorage    setShowPreviewModal(false);    history.push("/");  };  const handleEdit = () => {    setShowPreviewModal(false);  };  const handleShowModal = () => setShowModal(true);  const handleCloseModal = () => setShowModal(false);  return (    <div className="upload-container">      <header className="upload-header">        <h1>อัปโหลด {type === "image" ? "รูปภาพ" : "ข้อความ"}</h1>      </header>      <main className="upload-main">        <p>เวลา: {time} นาที</p>        <p>ราคา: {price} บาท</p>        {type === "image" && (          <>            <input type="file" accept="image/*" onChange={handleImageChange} />            <br />            {image && (              <div className="image-preview">                <img src={URL.createObjectURL(image)} alt="Preview" />                <div className="image-text">{text}</div>              </div>            )}          </>        )}        <textarea          placeholder="พิมพ์ข้อความที่ต้องการส่งขึ้นจอ..."          value={text}          onChange={handleTextChange}          rows={4}          cols={50}        />        <br />        <button className="restrictions-button" onClick={handleShowModal}>ข้อกำหนด</button>        <button className="continue-button" onClick={handleUpload}>ดำเนินการต่อ</button>        {alertMessage && <p className="alert-message">{alertMessage}</p>}        {showModal && (          <div className="modal">            <div className="modal-content">              <span className="close-button" onClick={handleCloseModal}>&times;</span>              <h3>ข้อกำหนด {type === "image" ? "รูปภาพ" : "ข้อความ"}</h3>              <ul>                {type === "image" ? (                  <>                    !!! ห้ามใช้รูปภาพดังต่อไปนี้                    <li>รูปภาพสำหรับการโฆษณาที่ละเมิดกฎหมาย (การพนัน, สินค้าแอลกอฮอล์, การชักชวนลงทุน, ยาเสพติด, สินค้าผิดกฎหมาย)</li>                    <li>รูปภาพเนื้อหาที่ไม่เหมาะสมหรือลามกอนาจาร</li>                    <li>รูปภาพที่ใช้ในการแสดงความคิดเห็นหรือจุดยืนละเมิดสิทธิหรือเสรีภาพของบุคคลอื่น</li>                    <li>รูปภาพที่กระทำการผิดกฎหมายหรือการคุกคาม</li>                    <li>รูปภาพที่อาจก่อให้เกิดความขัดแย้ง ความรุนแรง ชวนแตกความสามัคคีหรือดูถูกเหยียดหยาม</li>                    <li>รูปภาพที่มี QR Code หรือลิงก์เป็นส่วนประกอบ</li>                    <li>* ในกรณีที่มีการใช้ภาพที่ไม่เหมาะสมในเนื้อหาหรือการโฆษณา ทางผู้ให้บริการอาจปฎิเสธการให้บริการและไม่สามารถดำเนินการคืนเงินได้</li>                  </>                ) : (                  <>                    !!! ห้ามใช้ข้อความดังต่อไปนี้                    <li>ข้อความสำหรับการโฆษณาที่ละเมิดกฎหมาย (การพนัน, สินค้าแอลกอฮอล์, การชักชวนลงทุน, ยาเสพติด, สินค้าผิดกฎหมาย)</li>                    <li>ข้อความเนื้อหาที่ไม่เหมาะสมหรือลามกอนาจาร</li>                    <li>ข้อความที่ใช้ในการแสดงความคิดเห็นหรือจุดยืนละเมิดสิทธิหรือเสรีภาพของบุคคลอื่น</li>                    <li>ข้อความที่กระทำการผิดกฎหมายหรือการคุกคาม</li>                    <li>ข้อความที่อาจก่อให้เกิดความขัดแย้ง ความรุนแรง ชวนแตกความสามัคคีหรือดูถูกเหยียดหยาม</li>                    <li>* ในกรณีที่มีการใช้ข้อความที่ไม่เหมาะสมในเนื้อหาหรือการโฆษณา ทางผู้ให้บริการอาจปฎิเสธการให้บริการและไม่สามารถดำเนินการคืนเงินได้</li>                  </>                )}              </ul>            </div>          </div>        )}        {showPreviewModal && (          <div className="modal">            <div className="modal-content">              <span className="close-button" onClick={handleEdit}>&times;</span>              <h3>ยืนยันการแชร์วาร์ป</h3>              {type === "image" && image && (                <div className="image-preview">                  <img src={URL.createObjectURL(image)} alt="Preview" />                  <div className="image-text">{text}</div>                </div>              )}              {type === "text" && (                <p>{text}</p>              )}              <button className="accept-button" onClick={handleAccept}>ยอมรับ</button>              <button className="edit-button" onClick={handleEdit}>แก้ไข</button>            </div>          </div>        )}      </main>      <footer className="home-footer">        <p>© 2025 Digital Signage Content Management System</p>      </footer>    </div>  );}

export default Upload;